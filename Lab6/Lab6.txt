1. Порівняйте та назвіть переваги та недоліки таких методів сортування: сортування бульбашкою, сортування вибором, сортування вставкою.

Сортування обміном або сортування бульбашкою є простим алгоритмом сортування. Алгоритм працює таким чином — у поданому наборі даних (списку чи масиві) порівнюються два сусідні елементи. Якщо один з елементів, не відповідає критерію сортування (є більшим, або ж, навпаки, меншим за свого сусіда), то ці два елементи міняються місцями. Прохід по списку продовжується доти, доки дані не будуть відсортованими. Сортування бульбашкою ( зі слів Кнута) не є гарним алгоритмом,  окрім, хіба що через примітну назву і через те, що він є лідером у кількості цікавих теоретичних проблем. 

Cортування вибору значно перевершує на більших масивах by (n log n) алгоритми ділення 
Cортування вставки або сортування вибору обидва типово швидші для малих масивів (тобто менше 10–20 елементів).    

Сортування включенням на практиці ефективніший за більшість інших квадратичних алгоритмів (O(n2)), як то сортування вибором та сортування бульбашкою: його швидкодія рівна n2/4, і в найкращому випадку є лінійною


2. Оцініть кожен з методів відповідно до наступних критеріїв:
	- час роботи:
        бульбашкою:
            Найгірша швидкодія	О(n²)
            Найкраща швидкодія	О(n)
        
        вибором:
            Середня швидкодія	О(n2)

        вставкою: Найкраща швидкодія	О(n)
                    Середня швидкодія	О(n2)
    
	- потреби у додатковій пам’яті:
        бульбашкою: відустні

        вибором: потрібна для тимчасового зберігання найменшого елемента, що ще не знаходиться в відсортованному списку.

        вставкою: потрібна, only requires a constant amount O(1) of additional memory space

	- стабільність:
        
        бульбашкою: не стабільний
Позиції елементів, що підлягають сортуванню відіграють велику роль у питанні продуктивності даного алгоритму. Великі елементи на початку списку не являють проблему,    оскільки вони досить швидко зміщуються на свої місця. Однак, малі елементи у кінці списку переміщуються на його початок дуже повільно. Це призвело до того, що обидва типи елементів було названо кролями і черепахами, відповідно.

        вибором: Selection sort can be implemented as a stable sort. If, rather than swapping in step 2, the minimum value is inserted into the first position (that is, all intervening items moved down), the algorithm is stable. However, this modification either requires a data structure that supports efficient insertions or deletions, such as a linked list, or it leads to performing Θ(n2) writes.
Сортування вибором не є складним в аналізі та порівнянні його з іншими алгоритмами, оскільки жоден з циклів не залежить від даних у списку.

        вставкою: стабільний


За якими ще критеріями ви можете порівняти ці алгоритми? 
3. Який випадок є найкращім або найгіршим для роботи цих алгоритмів? (Наприклад: частково відсортований масив або масив, відсортований у зворотному порядку). Який з методів забезпечить у цих випадках найкращій/найгірший результат?
        бульбашкою:
            найкращий  N є малим числом + елементи з більшим значенням знаходяться ближче до кінця
            найгірший  коли N є досить великим, за винятком рідкісних конкретних випадків, коли заздалегідь відомо, що масив з самого початку буде добре відсортований.
                       малі елементи у кінці списку переміщуються на його початок дуже повільно 

        вибором:
            найкращий  сортування вибору значно перевершує на більших масивах by (n log n) алгоритми ділення 
                       сортування вставки або сортування вибору обидва типово швидші для малих масивів (тобто менше 10–20 елементів).            
            найгірший  Хоча сортування вибору є кращим перед сортуванням вставки за кількістю записів (Θ (n) замість Ο (n2) свопів), воно майже завжди значно перевищує (і ніколи не перемагає) кількість записів, які робить сортування циклів, як сортування циклів теоретично є оптимальним за кількістю записів. Це може бути важливо, якщо записи значно дорожчі, ніж читання, наприклад, з EEPROM або Flash-пам'яттю, де кожен запис зменшує тривалість життя пам'яті.

        вставкою:
            найкращий ефективний (зазвичай) на маленьких масивах
                      ефективний при сортуванні масивів, дані в яких вже непогано відсортовані: продуктивність рівна O(n + d), де d — кількість інверсій
            найгірший  чим більша кількість елементів потрібно впорядкувати, тим більший час потрібно для виконання сортування. Також на час виконання впливає вихідна впорядкованість масиву.

4. Що означають позначення O(1), O(n), O(n2)?
Асимптотична нотація великого О, відома також як нотація Ландау — розповсюджена математична нотація для формального запису асимптотичної поведінки функцій або ж складність алгоритму
О(1)  - лінійна складність ( гарний варіант)
O(n)  - складність залежить від кількості елементів
O(n2) - складність залежить від кількості елементів в квадраті ( повільний варіант) 

